===================
BLAS Level 1: rscal                                                    [TOC]
===================

*rscal* (defined in namespace `flens::blas`) computes $y \leftarrow
\frac{1}{\alpha} y$ for a vector $y$.

We also provide a variant that does the computation for matrices instead of
vectors.

Vector Variant
==============
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename VY>                                   |
|      typename RestrictTo<IsDenseVector<VY>::value,                        |
|               void>::Type                                                 |
|      rscal(const ALPHA &alpha, VY &&y);                                   |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>2#T#Trscal#&1t0.0#&t0.1#temp]
                         [latetypenameALPHA,typenameVYtypenameRestrictToIsDe]
                         [nseVectorVYvalue,voidType                         ]

    alpha    `(input) real scalar`                                             +
             Reciprocal scaling factor for the values in $y$.
    y        `(input/output) real or complex valued DenseVector`               +
             On entry the original vector $y$.                                 +
             On exit overwritten with $\frac{1}{\alpha}\,y$.


Matrix Variant (Level 1 Extension)
==================================
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename MB>                                   |
|      typename RestrictTo<IsGeMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      rscal(const ALPHA &alpha, MB &&B);                                   |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>2#T#Trscal#&1t0.0#&t0.1#temp]
                         [latetypenameALPHA,typenameMBtypenameRestrictToIsGe]
                         [MatrixMBvalue,voidType                            ]

    alpha    `(input) real scalar`                                             +
             Reciprocal scaling factor for the values in $y$.
    B        `(input/output) real or complex valued GeMatrix`                  +
             On entry the original matrix $B$.                                +
             On exit overwritten with $\frac{1}{\alpha}\,B$.
################################################################################
#
#  The following CODEREFs are automatically created stubs.
#
################################################################################


*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename VY>                                   |
|      typename RestrictTo<IsTinyVector<VY>::value,                         |
|               void>::Type                                                 |
|      rscal(const ALPHA &alpha, VY &&y);                                   |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>2#T#Trscal#&1t0.0#&t0.1#temp]
                         [latetypenameALPHA,typenameVYtypenameRestrictToIsTi]
                         [nyVectorVYvalue,voidType                          ]

    Defined in namespace `flens::blas`.
    Function `rscal` with 2 template parameters.



*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename MB>                                   |
|      typename RestrictTo<IsGeTinyMatrix<MB>::value,                       |
|               void>::Type                                                 |
|      rscal(const ALPHA &alpha, MB &&B);                                   |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>2#T#Trscal#&1t0.0#&t0.1#temp]
                         [latetypenameALPHA,typenameMBtypenameRestrictToIsGe]
                         [TinyMatrixMBvalue,voidType                        ]

    Defined in namespace `flens::blas`.
    Function `rscal` with 2 template parameters.



